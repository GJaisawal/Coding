1. What is software re-engineering?
2. What is Cohesion and Coupling?
3. What are the various phases of SDLC?
4. Characteristics of Good software.


1. What is software re-engineering?
Software Engineering is the process of designing, developing, testing, and maintaining software.
It is a systematic and disciplined approach to software development that aims to create high-quality, reliable, and maintainable software. 

2. What is Cohesion and Coupling?
Coupling and Cohesion are two key concepts in software engineering that are used to measure the quality of a software systemâ€™s design.

Coupling : Coupling refers to the degree of interdependence between software modules. 

           High coupling means that modules are closely connected andchanges in one module may affect other modules.
           Low coupling means that modules are independent and changes in one module have little impact on other modules.
           A good software will have low coupling. 
           
Cohesion : The measure of how strongly the elements are related functionally inside a module is called cohesion.
           A good software design will have high cohesion. 

3. What are the various phases of SDLC?
   1. Planning
   2. Gethering Requirements & Analysis
   3. Design
   4. Coding 
   5. Testing
   6. Deployment
   7. Maintenance

4. characteristics of efficient software.

   1. Functionality: The software meets the requirements and specifications that it was designed for, and it behaves as expected when it is used in its intended environment.
   2. Usability: The software is easy to use and understand, and it provides a positive user experience.
   3. Reliability: The software is free of defects and it performs consistently and accurately under different conditions and scenarios
   4. Performance: The software runs efficiently and quickly, and it can handle large amounts of data or traffic.
   5. Security: The software is protected against unauthorized access and it keeps the data and functions safe from malicious attacks.
   6. Maintainability: The software is easy to change and update, and it is well-documented, so that it can be understood and modified by other developers.
   7. Scalability: The software can handle an increasing workload and it can be easily extended to meet the changing requirements.

5. 
